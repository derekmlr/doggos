{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/CardList.js","components/ErrorBoundary.js","doggos.js","containers/App.js","actions.js","constants.js","reducers.js","serviceWorker.js","index.js"],"names":["SearchBox","_ref","searchValue","searchChange","react_default","a","createElement","className","type","placeholder","onChange","Card","id","name","breed","src","concat","alt","CardList","doggos","Error","map","dog","i","components_Card","key","ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","children","Component","src_doggos","App","fetchDogs","_this$props","onSearchChange","filteredDoggos","filter","doggo","toLowerCase","includes","length","components_SearchBox","components_ErrorBoundary","src_components_CardList","connect","searchDogs","dogsData","dispatch","event","payload","target","value","initialSearchState","initialDogDataState","Boolean","window","location","hostname","match","logger","createLogger","rootReducer","combineReducers","arguments","undefined","action","objectSpread","store","createStore","applyMiddleware","ReactDOM","render","es","src_containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8bdda285.chunk.js","sourcesContent":["import React from 'react';\n\nconst SearchBox = ({ searchValue, searchChange }) => {\n\treturn (\n\t\t<div>\n\t\t\t<input\n\t\t\t\tclassName=\"pa3 ba mb4 br3 w-30\"\n\t\t\t\ttype=\"search\"\n\t\t\t\tplaceholder=\"Filter by dog name...\"\n\t\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Card = ({ id, name, breed }) => {\n\treturn (\n\t\t<div className=\"tc grow bg-black white br3 pa2 ma2 dib bw2\">\n\t\t\t<img src={`img/dog${id}.jpeg`} alt={name} />\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nimport './CardList.css';\n\nconst CardList = ({ doggos }) => {\n\tif (!doggos) {\n\t\tthrow new Error('No dogs were found. :(');\n\t}\n\treturn (\n\t\t<div className=\"CardList-container\">\n\t\t\t{\n\t\t\t\tdoggos.map((dog, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card \n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\tid={dog.id}\n\t\t\t\t\t\t\tname={dog.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default CardList;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\n\tcomponentDidCatch(error, info) {\n\t\tthis.setState({ hasError: true });\n\t}\n\n\trender() {\n\t\treturn this.state.hasError ? (\n\t\t\t\t<h1>Something wrong happened! D:</h1>\n\t\t\t) : (\n\t\t\t\t<div>{this.props.children}</div>\n\t\t\t);\n\t}\n}\n\nexport default ErrorBoundary;","/**\n * List of dogs (doggos)\n */\nexport default [\n\t{\n\t\tid: 1,\n\t\tname: 'Fluffy'\n\t},\n\t{\n\t\tid: 2,\n\t\tname: 'Daisy'\n\t},\n\t{\n\t\tid: 3,\n\t\tname: 'Dresden'\n\t},\n\t{\n\t\tid: 4,\n\t\tname: 'Bella'\n\t},\n\t{\n\t\tid: 5,\n\t\tname: 'Lucy'\n\t},\n\t{\n\t\tid: 6,\n\t\tname: 'Charlie'\n\t},\n\t{\n\t\tid: 7,\n\t\tname: 'Luna'\n\t},\n\t{\n\t\tid: 8,\n\t\tname: 'Maggie'\n\t},\n\t{\n\t\tid: 9,\n\t\tname: 'Darren'\n\t},\n\t{\n\t\tid: 10,\n\t\tname: 'Trix'\n\t},\n\t{\n\t\tid: 11,\n\t\tname: 'Chase'\n\t},\n\t{\n\t\tid: 12,\n\t\tname: 'Bud'\n\t}\n]","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport SearchBox from '../components/SearchBox';\nimport CardList from '../components/CardList';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nimport './App.css';\n\nimport { setSearchValue, fetchDogData } from '../actions';\n\n\n\nclass App extends Component {\n\t\n\tcomponentDidMount() {\n\t\t// Set dog data into state.\n\t\tthis.props.fetchDogs();\n\t}\n\n\trender() {\n\t\tconst { searchValue, onSearchChange, doggos } = this.props;\n\t\t\n\t\t// Filter dogs list via search term entered.\n\t\tconst filteredDoggos = doggos.filter(doggo => {\n\t\t\treturn doggo.name.toLowerCase().includes(searchValue.toLowerCase());\n\t\t});\n\t\t\n\t\treturn !doggos.length ? \n\t\t\t<h1>Loading...</h1> :\n\t\t\t(\n\t\t\t\t<div className=\"tc\">\n\t\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t\t<h1 className=\"f1\">Doggos</h1>\n\t\t\t\t\t\t<SearchBox searchChange={onSearchChange} />\n\t\t\t\t\t</header>\n\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t<CardList doggos={filteredDoggos} />\n\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t</div>\n\t\t\t);\n\t}\n}\n\n// Add Redux state into component props\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tsearchValue: state.searchDogs.searchValue,\n\t\tdoggos: state.dogsData.doggos\n\t}\n}\n\n// Add Redux actions into component props\nconst mapDispatchToProps = (dispatch) => ({\n\tonSearchChange: (event) => dispatch(setSearchValue(event.target.value)),\n\tfetchDogs: () => dispatch(fetchDogData())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { SET_SEARCH_VALUE, FETCH_DOG_DATA } from './constants';\nimport doggos from './doggos';\n\nexport const setSearchValue = (text) => ({\n\ttype: SET_SEARCH_VALUE,\n\tpayload: text\n})\n\nexport const fetchDogData = () => ({\n\ttype: FETCH_DOG_DATA,\n\tpayload: doggos\n})","export const SET_SEARCH_VALUE = 'SET_SEARCH_VALUE';\nexport const FETCH_DOG_DATA = 'FETCH_DOG_DATA';","import { SET_SEARCH_VALUE, FETCH_DOG_DATA } from './constants';\n\n// Search Dogs Reducer\nconst initialSearchState = {\n\tsearchValue: ''\n}\nexport const searchDogs = (state=initialSearchState, action={}) => {\n\tswitch(action.type) {\n\t\tcase SET_SEARCH_VALUE:\n\t\t\treturn { ...state, searchValue: action.payload }\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n// Dog Data Reducer\nconst initialDogDataState = {\n\tdoggos:[]\n}\nexport const dogsData = (state=initialDogDataState, action={}) => {\n\tswitch(action.type) {\n\t\tcase FETCH_DOG_DATA:\n\t\t\treturn { ...state, doggos: action.payload}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\n\nimport App from './containers/App';\n\nimport { searchDogs, dogsData } from './reducers';\n\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport 'tachyons';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchDogs, dogsData });\nconst store = createStore(rootReducer, applyMiddleware(logger));\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>, \n\tdocument.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}